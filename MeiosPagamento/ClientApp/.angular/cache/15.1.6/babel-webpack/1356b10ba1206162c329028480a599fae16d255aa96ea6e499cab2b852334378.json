{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(homeDataService, http, baseUrl) {\n    this.homeDataService = homeDataService;\n    this.forecasts = [];\n    this.pagamentos = [];\n    this.pagamento = {};\n    this.showList = true;\n    http.get(baseUrl + 'weatherforecast/pix').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n  save() {\n    debugger;\n    this.homeDataService.post(this.pagamento).subscribe(data => {\n      if (data) {\n        alert('Pagamento cadastrado com sucesso');\n      } else {\n        alert('Erro ao cadastrar Pagamento');\n      }\n    }, error => {\n      console.log(error);\n      alert('erro interno do sistema');\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n}), __param(2, Inject('BASE_URL'))], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAU1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAmBC,eAAgC,EAAEC,IAAgB,EAAsBC,OAAe;IAAvF,oBAAe,GAAfF,eAAe;IAN3B,cAAS,GAAsB,EAAE;IAExC,eAAU,GAAU,EAAE;IACtB,cAAS,GAAQ,EAAE;IACnB,aAAQ,GAAY,IAAI;IAGtBC,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,qBAAqB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC9E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAGAE,IAAI;IACF;IACA,IAAI,CAACT,eAAe,CAACU,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,CAACP,SAAS,CAACQ,IAAI,IAAG;MACzD,IAAIA,IAAI,EAAE;QACRC,KAAK,CAAC,kCAAkC,CAAC;OAC1C,MAAM;QACLA,KAAK,CAAC,6BAA6B,CAAC;;IAExC,CAAC,EAAEN,KAAK,IAAG;MACTC,OAAO,CAACM,GAAG,CAACP,KAAK,CAAC;MAClBM,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC;EACJ;CACD;AA3BYf,aAAa,eANzBF,SAAS,CAAC;EACTmB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,EAUwEC,iBAAM,CAAC,UAAU,CAAC,IAP/EnB,aAAa,CA2BzB;SA3BYA,aAAa","names":["Component","Inject","HomeComponent","constructor","homeDataService","http","baseUrl","get","subscribe","result","forecasts","error","console","save","post","pagamento","data","alert","log","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\Larissa\\source\\repos\\MeiosPagamento\\MeiosPagamento\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HomeDataService } from '../_data-services/home.data-service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\n\r\n\r\nexport class HomeComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n  public tipoPagamento: any;\r\n  pagamentos: any[] = [];\r\n  pagamento: any = {};\r\n  showList: boolean = true;\r\n\r\n  constructor(public homeDataService: HomeDataService, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast/pix').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  save() {\r\n    debugger;\r\n    this.homeDataService.post(this.pagamento).subscribe(data => {\r\n      if (data) {\r\n        alert('Pagamento cadastrado com sucesso');\r\n      } else {\r\n        alert('Erro ao cadastrar Pagamento');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n      alert('erro interno do sistema');\r\n    })\r\n  }\r\n}\r\n\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}