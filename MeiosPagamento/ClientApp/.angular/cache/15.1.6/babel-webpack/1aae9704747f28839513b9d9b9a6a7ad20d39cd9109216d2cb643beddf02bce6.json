{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PagamentoComponent = class PagamentoComponent {\n  constructor(pagamentoDataService) {\n    this.pagamentoDataService = pagamentoDataService;\n    this.pagamentos = [];\n    this.pagamento = {};\n    this.showList = true;\n  }\n  ngOnInit() {\n    this.get();\n  }\n  get() {\n    debugger;\n    this.pagamentoDataService.get().subscribe(data => {\n      this.pagamentos = data;\n      this.showList = true;\n    }, error => {\n      console.log(error);\n      alert('erro interno do sistema');\n    });\n  }\n  save() {\n    this.pagamento.codigo = 0;\n    this.pagamentoDataService.post(this.pagamento).subscribe(data => {\n      if (data) {\n        alert('Pagamento cadastrado com sucesso');\n      } else {\n        alert('Erro ao cadastrar Pagamento');\n      }\n    }, error => {\n      console.log(error);\n      alert('erro interno do sistema');\n    });\n  }\n  edit() {\n    this.pagamentoDataService.put(this.codigo).subscribe(data => {\n      if (data) {\n        alert('Pagamento atualizado com sucesso');\n        /*this.get();*/\n        this.pagamento = {};\n      } else {\n        alert('Erro ao atualizar Pagamento');\n      }\n    }, error => {\n      console.log(error);\n      alert('erro interno do sistema');\n    });\n  }\n  delete() {\n    this.pagamentoDataService.delete(this.codigo).subscribe(data => {\n      if (data) {\n        alert('Pagamento excluído com sucesso');\n        /* this.get();*/\n        this.pagamento = {};\n      } else {\n        alert('Erro ao excluir Pagamento');\n      }\n    }, error => {\n      console.log(error);\n      alert('erro interno do sistema');\n    });\n  }\n};\nPagamentoComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './pagamento.component.html'\n})], PagamentoComponent);\nexport { PagamentoComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAwB,eAAe;AAUlD,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAQ7BC,YAAoBC,oBAA0C;IAA1C,yBAAoB,GAApBA,oBAAoB;IANxC,eAAU,GAAQ,EAAE;IACpB,cAAS,GAAQ,EAAE;IAEnB,aAAQ,GAAY,IAAI;EAG0C;EAElEC,QAAQ;IACN,IAAI,CAACC,GAAG,EAAE;EACZ;EAEAA,GAAG;IACD;IACA,IAAI,CAACF,oBAAoB,CAACE,GAAG,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACC,UAAU,GAAGD,IAAI;MACtB,IAAI,CAACE,QAAQ,GAAG,IAAI;IACtB,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAC,IAAI;IACF,IAAI,CAACC,SAAS,CAACC,MAAM,GAAG,CAAC;IACzB,IAAI,CAACb,oBAAoB,CAACc,IAAI,CAAC,IAAI,CAACF,SAAS,CAAC,CAACT,SAAS,CAACC,IAAI,IAAG;MAC9D,IAAIA,IAAI,EAAE;QACRM,KAAK,CAAC,kCAAkC,CAAC;OAC1C,MAAM;QACLA,KAAK,CAAC,6BAA6B,CAAC;;IAExC,CAAC,EAAEH,KAAK,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAK,IAAI;IACF,IAAI,CAACf,oBAAoB,CAACgB,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC,CAACV,SAAS,CAACC,IAAI,IAAG;MAC1D,IAAIA,IAAI,EAAE;QACRM,KAAK,CAAC,kCAAkC,CAAC;QACzC;QACA,IAAI,CAACE,SAAS,GAAG,EAAE;OACpB,MAAM;QACLF,KAAK,CAAC,6BAA6B,CAAC;;IAExC,CAAC,EAAEH,KAAK,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAO,MAAM;IACJ,IAAI,CAACjB,oBAAoB,CAACiB,MAAM,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACV,SAAS,CAACC,IAAI,IAAG;MAC7D,IAAIA,IAAI,EAAE;QACRM,KAAK,CAAC,gCAAgC,CAAC;QACvC;QACA,IAAI,CAACE,SAAS,GAAG,EAAE;OACpB,MAAM;QACLF,KAAK,CAAC,2BAA2B,CAAC;;IAEtC,CAAC,EAAEH,KAAK,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC;EACJ;CAED;AArEYZ,kBAAkB,eAN9BD,SAAS,CAAC;EACTqB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,GAGWrB,kBAAkB,CAqE9B;SArEYA,kBAAkB","names":["Component","PagamentoComponent","constructor","pagamentoDataService","ngOnInit","get","subscribe","data","pagamentos","showList","error","console","log","alert","save","pagamento","codigo","post","edit","put","delete","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Larissa\\source\\repos\\MeiosPagamento\\MeiosPagamento\\ClientApp\\src\\app\\pagamento\\pagamento.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PagamentoDataService } from '../_data-services/pagamento.data-service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './pagamento.component.html',\r\n})\r\n\r\n\r\nexport class PagamentoComponent implements OnInit {\r\n\r\n  pagamentos: any = [];\r\n  pagamento: any = {};\r\n  codigo: any ;\r\n  showList: boolean = true;\r\n\r\n\r\n  constructor(private pagamentoDataService: PagamentoDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    debugger;\r\n    this.pagamentoDataService.get().subscribe(data => {\r\n      this.pagamentos = data;\r\n      this.showList = true;\r\n    }, error => {\r\n      console.log(error);\r\n      alert('erro interno do sistema');\r\n    })\r\n  }\r\n\r\n  save() {\r\n    this.pagamento.codigo = 0\r\n    this.pagamentoDataService.post(this.pagamento).subscribe(data => {\r\n      if (data) {\r\n        alert('Pagamento cadastrado com sucesso');\r\n      } else {\r\n        alert('Erro ao cadastrar Pagamento');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n      alert('erro interno do sistema');\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.pagamentoDataService.put(this.codigo).subscribe(data => {\r\n      if (data) {\r\n        alert('Pagamento atualizado com sucesso');\r\n        /*this.get();*/\r\n        this.pagamento = {};\r\n      } else {\r\n        alert('Erro ao atualizar Pagamento');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n      alert('erro interno do sistema');\r\n    })\r\n  }\r\n\r\n  delete() {\r\n    this.pagamentoDataService.delete(this.codigo).subscribe(data => {\r\n      if (data) {\r\n        alert('Pagamento excluído com sucesso');\r\n        /* this.get();*/\r\n        this.pagamento = {};\r\n      } else {\r\n        alert('Erro ao excluir Pagamento');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n      alert('erro interno do sistema');\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}